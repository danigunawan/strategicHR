<div id="player"></div>

<script>
  // 2. This code loads the IFrame Player API code asynchronously.
  var tag = document.createElement('script');

  tag.src = "//www.youtube.com/iframe_api";
  var firstScriptTag = document.getElementsByTagName('script')[0];
  firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);

  // 3. This function creates an <iframe> (and YouTube player)
  //    after the API code downloads.
  var player;
  function onYouTubeIframeAPIReady() {
    player = new YT.Player('player', {
      height: '390',
      width: '640',
      videoId: '<%= "#{youtube_id(@video.url)}" %>',
      events: {
        'onReady': onPlayerReady,
        'onStateChange': onPlayerStateChange
      }
    });
  }

  // 4. The API will call this function when the video player is ready.
  function onPlayerReady(event) {
    event.target.playVideo();
  }

  function onPlayerStateChange (state) {
    console.log(state);
    switch (state.data) {
      case 0:
        // Video is unstarted
        console.log('video event 0: ended');
        break;   
      case 1:
        // Video is now playing
        console.log('video event 1: playing');
        break; 
      case 2:
        // Video is now paused
        console.log('video event 2: paused');
        break; 
      case 3:
        // Video is now buffering
        console.log('video event 3: buffering');
        break;
    }
  }

</script>